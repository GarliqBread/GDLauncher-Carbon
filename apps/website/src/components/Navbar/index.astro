---
import Button from "@/components/Button/index";
import Burger from "@/components/Burger/index.astro";
import Interactivity from "@/components/Navbar/Interactivity";
import LanguageSelect from "@/components/Navbar/LanguageSelect";
import linksList from "@/components/Navbar/linksList";
import composeCDNAssetLink from "@/utils/composeCDNAssetLink";
import { getLanguageFromURL, localizePath } from "@/utils/helpers";
import { useTranslations } from "@/i18n/utils";
import { format } from "@/utils/i18n";

export interface Props {
  currentPage: string;
}


const { currentPage } = Astro.props as Props;;
const lang = currentPage && getLanguageFromURL(currentPage);
const t = useTranslations(Astro);

---

<Interactivity client:load />

<div
  class="navbar max-h-28 absolute bottom-0 md:top-0 md:bottom-auto left-0 right-0 z-10 p-6 flex flex-col justify-between items-center bg-gray-900 md:bg-transparent">
  <div class="flex justify-between w-full max-w-7xl">
    <div class="flex justify-between items-center gap-x-10 w-full md:w-auto">
      <img src={composeCDNAssetLink("gdlauncher_logo.svg")} alt="logo" class="cursor-pointer h-8 w-8" />
      <div class="burger md:hidden">
        <Burger />
      </div>
      <div class="hidden md:flex font-medium justify-between items-center gap-x-5 text-white">
        {linksList.map((props) => (
        <a class={`button ${ globalThis?.location?.pathname===props.linkTo ? "selected" : "" }`}
          href={localizePath(props.linkTo, lang, props.isExternalLink)}>
          {format(t(props.title[0]), "capitalize")}
        </a>
        ))}
        <a class="button">
          {lang &&
          <LanguageSelect lang={lang} client:idle />}
        </a>
      </div>
    </div>
    <div class="hidden md:flex">
      <Button>{t("navbar.download")}</Button>
    </div>
  </div>
</div>
<div
  class="mobile-menu hidden absolute top-0 bottom-0 left-0 right-0 flex-col justify-center items-center bg-gray-900 padding-4">
  <div class="flex flex-col justify-center items-center gap-4">
    {linksList.map((props) => (
    <a class={`p-0 cursor-pointer transition ease-in-out relative m-1 text-slate-400 ${
      globalThis?.location?.pathname===props.linkTo ? "selected" : "" }`} href={localizePath(props.linkTo, lang,
      props.isExternalLink)}>
      {format(t(props.title[0]), "capitalize")}
    </a>
    ))}
    {lang &&
    <LanguageSelect lang={lang} client:idle />}
    <div class="block">
      <Button>{t("navbar.download")}</Button>
    </div>
  </div>
</div>