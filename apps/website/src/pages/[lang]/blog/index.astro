---
import languages from "@/i18n/languages";
import MainWrapper from "@/layouts/MainWrapper.astro";

// export async function getStaticPaths() {
//   const posts = await Astro.glob("./*.md").then(
//     (posts) => {
//       // console.log("posts", posts[0].file);
//       return posts.map(({ frontmatter, url }) => ({
//         url: url,
//         title: frontmatter.title,
//         description: frontmatter.description,
//         publishDate: frontmatter.publishDate,
//         image: frontmatter.image,
//         // lang: " ",
//         // params: { lang: "en" },
//       }));
//     }
//     // .sort((a, b) => {
//     // 	new Date(b.publishDate) - new Date(a.publishDate)
//     // })
//   );
//   console.log("AAAA", posts);
//   return posts;
// }

// export const getStaticPaths = async ({ paginate }: { paginate: any }) => {
//   const posts = await Astro.glob("./*.md").then(
//     (posts) => {
//       return posts.map(({ frontmatter, url }) => ({
//         url: url,
//         title: frontmatter.title,
//         description: frontmatter.description,
//         publishDate: frontmatter.publishDate,
//         image: frontmatter.image,
//         // lang: " ",
//       }));
//     }
//     // .sort((a, b) => {
//     // 	new Date(b.publishDate) - new Date(a.publishDate)
//     // })
//   );
//   console.log("posts", posts), paginate(posts, { pageSize: 10 });
//   return Object.keys(languages).map((lang) => ({ params: { lang } }));
// };

export const getStaticPaths = async () => {
  const posts = await Astro.glob("./*.md").then(
    (posts) => {
      // console.log("posts", posts);
      return posts.map(({ frontmatter, url }) => ({
        url: url,
        title: frontmatter.title,
        description: frontmatter.description,
        publishDate: frontmatter.publishDate,
        image: frontmatter.image,
      }));
    }
    // .sort((a, b) => {
    // 	new Date(b.publishDate) - new Date(a.publishDate)
    // })
  );

  return Object.keys(languages).map((lang) => ({
    params: { lang },
    props: { posts },
  }));
};

const { posts } = Astro.props;
---

<MainWrapper>
  {posts.map((post: any) => <div>{post.title}</div>)}
  <!-- TEST -->
</MainWrapper>
