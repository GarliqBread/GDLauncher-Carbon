version: 2.1

orbs:
  win: circleci/windows@4.1.1

executors:
  linux:
    docker:
      - image: cimg/rust:1.62.0-node
    resource_class: medium
  mac:
    macos:
      xcode: "14.0.0"
    resource_class: medium
  macm1:
    macos:
      xcode: "14.0.0"
    resource_class: medium

jobs:
  build:
    parameters:
      os:
        type: string
    executor: <<parameters.os>>
    steps:
      - checkout
      # MACOS
      - when:
          condition:
            and:
              - equal: ["mac", <<parameters.os>>]
          steps:
            - run: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
                source "$HOME/.cargo/env"
                rustup toolchain install nightly
                rustup target add x86_64-apple-darwin --toolchain nightly
                rustup default nightly
                node -v
                cargo --version
                sudo npm i -g pnpm
                pnpm i
                chmod -R a+x node_modules
                pnpm build-mac-x64
      # MACOS M1
      - when:
          condition:
            and:
              - equal: ["macm1", <<parameters.os>>]
          steps:
            - run: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
                source "$HOME/.cargo/env"
                rustup toolchain install nightly
                rustup target add aarch64-apple-darwin --toolchain nightly
                rustup default nightly
                node -v
                cargo --version
                sudo npm i -g pnpm
                pnpm i
                chmod -R a+x node_modules
                pnpm build-mac-arm64
      # LINUX
      - when:
          condition:
            and:
              - equal: ["linux", <<parameters.os>>]
          steps:
            - run: |
                rustup toolchain install nightly
                rustup target add x86_64-unknown-linux-gnu --toolchain nightly
                rustup default nightly
                node -v
                cargo --version
                sudo npm i -g pnpm
                pnpm i
                chmod -R a+x node_modules
                pnpm build-linux-x64
  buildWin:
    executor:
      name: win/server-2022
      size: medium
    steps:
      - checkout
      - run:
          name: "Install Rust"
          command: |
            $ProgressPreference = 'Continue'    
            Invoke-WebRequest -Uri "https://win.rustup.rs/" -OutFile "C:\rustup-init.exe"
            & C:\rustup-init.exe -y --default-toolchain "nightly-x86_64-pc-windows-msvc" --no-modify-path --profile minimal
            $env:path += ";$env:userprofile\.cargo\bin"

            rustc -Vv
            cargo --version
            rustc --version | Out-File -FilePath "rust-version"
            if (!(Test-Path "Cargo.lock" -PathType Leaf)) {
                cargo generate-lockfile
            }
      - run: |
          $env:path += ";$env:userprofile\.cargo\bin;$env:appdata\npm"
          npm i -g pnpm
          pnpm i
          pnpm build-win-x64

workflows:
  all-builds:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
          matrix:
            parameters:
              os: ["linux", "mac", "macm1"]
      - buildWin
          filters:
            branches:
              only:
                - master
